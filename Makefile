# Makefile based on https://github.com/Masterminds/glide/blob/master/Makefile

GO        ?= go
DIST_DIRS := find * -type d -exec
VERSION   ?= $(shell git describe --tags)
PRG       ?= macobot
CFG       ?= .env

# Required arguments:
# Mattermost server address
ADDR      ?=
# Bot login
LOGIN     ?=
# Bot password
PASSWORD  ?=
# Bot team
TEAM      ?=
# Command channel
CHANNEL   ?=

# Optional arguments:

# Command file (default: ./macobot.sh)
COMMAND   ?=
# Format #NNN with this link (default: empty, disable formatting)
# Example: --issue_link '* [%[1]s](https://redmine/issues/%[1]s)\n'
ADD       ?=

# ------------------------------------------------------------------------------

# Файл .env
define CONFIG_DEF
# config file, generated by make config

# Required arguments:
# Mattermost server address
ADDR=$(ADDR)
# Bot login
LOGIN=$(LOGIN)
# Bot password
PASSWORD=$(PASSWORD)
# Bot team
TEAM=$(TEAM)
# Command channel
CHANNEL=$(CHANNEL)

# Optional arguments:

# Command file (default: ./macobot.sh)
COMMAND=$(COMMAND)
# Format #NNN with this link (default: empty, disable formatting)
# Example: '* [%[1]s](http://rm.tender.pro/issues/%[1]s)\n'
ADD=$(ADD)

endef
export CONFIG_DEF

-include $(CFG)
export

all: help

build:
	${GO} build -o $(PRG) -ldflags "-X main.version=${VERSION}" *.go

run: build
	./$(PRG) --addr $(ADDR) --login $(LOGIN) --password $(PASSWORD) --team $(TEAM) --channel $(CHANNEL) $(ADD)

install: build
	install -d ${DESTDIR}/usr/local/bin/
	install -m 755 ./$(PRG) ${DESTDIR}/usr/local/bin/$(PRG)

clean:
	rm -f ./$(PRG)
	rm -rf ./dist

vendor:
	@echo "*** $@:glide ***"
	which glide > /dev/null || curl https://glide.sh/get | sh
	@echo "*** $@ ***"
	glide install

bootstrap-dist:
	${GO} get -u github.com/Masterminds/gox

build-all:
	gox -verbose \
	-ldflags "-X main.version=${VERSION}" \
	-os="linux darwin windows" \
	-arch="amd64 386" \
	-osarch="!darwin/arm64" \
	-output="dist/{{.OS}}-{{.Arch}}/{{.Dir}}" .

dist: build-all
	cd dist && \
	$(DIST_DIRS) cp ../LICENSE {} \; && \
	$(DIST_DIRS) cp ../README.md {} \; && \
	$(DIST_DIRS) tar -zcf $(PRG)-${VERSION}-{}.tar.gz {} \; && \
	$(DIST_DIRS) zip -r $(PRG)-${VERSION}-{}.zip {} \; && \
	cd ..

.PHONY: build install clean bootstrap-dist build-all dist config

$(CFG):
	@echo "*** $@ ***"
	@echo "$$CONFIG_DEF" > $@

## Create default $(CFG) file
config:
	@true

## Show available make targets
help:
	@grep -A 1 "^##" Makefile | less
